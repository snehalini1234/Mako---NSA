version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: sharks-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: sharkpassword123
      MONGO_INITDB_DATABASE: sharks_from_space
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - shark-network

  # Backend API (Node.js/Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sharks-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:sharkpassword123@mongodb:27017/sharks_from_space?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - NASA_API_KEY=${NASA_API_KEY}
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
    networks:
      - shark-network
    command: npm start

  # ML Processing Service (Python)
  ml-service:
    build:
      context: ./ml-pipeline
      dockerfile: Dockerfile
    container_name: sharks-ml-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - API_ENDPOINT=http://backend:5000/api
      - NASA_API_KEY=${NASA_API_KEY}
      - MODEL_PATH=/app/models/shark_detection_model.h5
    volumes:
      - ./ml-pipeline:/app
      - ml_models:/app/models
      - satellite_data:/app/satellite_data
    depends_on:
      - backend
    networks:
      - shark-network
    command: python app.py

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sharks-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_API_KEY}
    depends_on:
      - backend
    networks:
      - shark-network

  # Redis Cache (Optional - for performance)
  redis:
    image: redis:7-alpine
    container_name: sharks-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shark-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: sharks-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - shark-network

networks:
  shark-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local
  ml_models:
    driver: local
  satellite_data:
    driver: local
  redis_data:
    driver: local